From db4cfe85a12133b55a33b914f29881ca48b83c8c Mon Sep 17 00:00:00 2001
From: Flavio Tordini <flavio.tordini@gmail.com>
Date: Sun, 9 Aug 2020 10:50:48 +0200
Subject: [PATCH] better server init

---
 src/invidious/invidious.cpp | 15 +++++++++++----
 src/invidious/invidious.h   |  1 +
 2 files changed, 12 insertions(+), 4 deletions(-)

diff --git a/src/invidious/invidious.cpp b/src/invidious/invidious.cpp
index 38faf9a..49c2366 100644
--- a/src/invidious/invidious.cpp
+++ b/src/invidious/invidious.cpp
@@ -36,11 +36,14 @@ Http &Invidious::cachedHttp() {
 Invidious::Invidious(QObject *parent) : QObject(parent) {}
 
 void Invidious::initServers() {
-    servers.clear();
+    if (!servers.isEmpty()) shuffleServers();
+
     QUrl url("https://instances.invidio.us/instances.json?sort_by=type,health,users");
     auto reply = HttpUtils::yt().get(url);
     connect(reply, &HttpReply::finished, this, [this](auto &reply) {
         if (reply.isSuccessful()) {
+            servers.clear();
+
             QSettings settings;
             QStringList keywords = settings.value("recentKeywords").toStringList();
             QString testKeyword = keywords.isEmpty() ? "test" : keywords.first();
@@ -48,13 +51,14 @@ void Invidious::initServers() {
             bool haveEnoughServers = false;
             QJsonDocument doc = QJsonDocument::fromJson(reply.body());
             for (const auto &v : doc.array()) {
+                if (haveEnoughServers) break;
+
                 auto serverArray = v.toArray();
                 QString host = serverArray.first().toString();
                 QJsonObject serverObj = serverArray.at(1).toObject();
                 if (serverObj["type"] == "https") {
                     QString url = "https://" + host;
 
-                    if (haveEnoughServers) break;
                     QUrl testUrl(url + "/api/v1/search?q=" + testKeyword);
                     auto reply = http().get(testUrl);
                     connect(reply, &HttpReply::finished, this,
@@ -65,8 +69,7 @@ void Invidious::initServers() {
                                         servers << url;
                                         if (servers.size() > 4) {
                                             haveEnoughServers = true;
-                                            std::shuffle(servers.begin(), servers.end(),
-                                                         *QRandomGenerator::global());
+                                            shuffleServers();
                                             qDebug() << servers;
                                             emit serversInitialized();
                                         }
@@ -79,6 +82,10 @@ void Invidious::initServers() {
     });
 }
 
+void Invidious::shuffleServers() {
+    std::shuffle(servers.begin(), servers.end(), *QRandomGenerator::global());
+}
+
 QString Invidious::baseUrl() {
     QString host;
     if (servers.isEmpty())
diff --git a/src/invidious/invidious.h b/src/invidious/invidious.h
index 65de4c0..f6fe09a 100644
--- a/src/invidious/invidious.h
+++ b/src/invidious/invidious.h
@@ -15,6 +15,7 @@ class Invidious : public QObject {
 
     explicit Invidious(QObject *parent = nullptr);
     void initServers();
+    void shuffleServers();
     QString baseUrl();
     QUrl method(const QString &name);
 
